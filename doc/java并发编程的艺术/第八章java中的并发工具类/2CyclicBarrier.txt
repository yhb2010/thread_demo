CyclicBarrier让一组线程到达一个屏障（也可以叫做同步点）时被阻塞，直到最后一个线程到达屏障时，屏障才会开门，所有被屏障拦截的线程才会继续运行。

CyclicBarrier的默认构造方法时CyclicBarrier(int parties)，其参数表示屏障拦截的线程数量，每个线程调用await方法告诉CyclicBarrier我已经到达了屏障，然后
当前线程被阻塞。

与CountDownLatch的区别：
	CountDownLatch的计数器只能使用一次，而CyclicBarrier的计数器可以使用reset()方法重置。所以CyclicBarrier能处理更为复杂的业务场景。例如，如果计算发生
	错误，可以重置计数器，并让线程重新执行一次。

CyclicBarrier还有其他一些方法：
	1、getNumberWaiting方法可以获取CyclicBarrier阻塞的线程数量。
	2、isBroken()方法返回阻塞线程是否被中断，中断返回true