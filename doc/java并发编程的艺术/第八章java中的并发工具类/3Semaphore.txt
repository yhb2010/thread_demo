Semaphore（信号量）是用来控制同时访问特定资源的线程数量，它通过协调各个线程，以保证合理的使用公共资源。

应用场景：
	Semaphore可以用作流程控制，特别是公用资源有限的应用场景，比如数据库连接。假如有一个需求，要读取几万个文件的数据，因为是io密集型任务，我们可以启动几十个
	线程并发地读取，但是如果读到内存后，还需要存储到数据库中，而数据库的连接数只有10个，这时我们必须控制只有10个线程同时获取数据库连接保存数据，否则会报错无法
	获取数据库连接。这个时候，就可以使用Semaphore来做流量控制。例如SemaphoreTest.java。

其他方法：
	1、intvailablePermits()：返回此信号量中当前可用的许可证数。
	1、intgetQueueLength()：返回正在等待获取许可证的线程数。
	3、boolean hasQueuedThreads()：是否有线程正在等待获取许可证。
	4、void reducePermits(int reduction)：减少reduction个许可证，是个protected方法。
	5、Collection getQueuedThreads()：返回所有等待获取许可证的线程集合，是个protected方法。