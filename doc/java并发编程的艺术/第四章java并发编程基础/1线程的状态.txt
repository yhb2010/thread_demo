java线程的状态：
	1、new：初始状态，线程被构建，但是还没有调用start方法
	2、runnable：运行状态，java线程将操作系统中的就绪和运行两种状态笼统的称作运行中
	3、blocked：阻塞状态，表示线程阻塞于锁
	4、waiting：等待状态，表示线程进行等待状态，进入该状态表示当前线程需要等待其它线程作出一些特定动作（通知或中断）
	5、time_waiting：超时等待状态，该状态不同于waiting，它是可以在指定时间自行返回的
	6、terminated：终止状态，表示当前线程已经执行完毕

线程创建之后，调用start方法开始运行，当线程执行wait方法之后，线程进入等待状态。进入等待状态的线程需要依靠其它线程的通知才能够返回到运行状态，而超时
等待状态相当于在等待状态的基础上增加了超时限制，也就是超时时间到达时将会返回到运行状态。当线程调用同步方法时，在没有获取到锁的情况下，线程将进入阻塞
状态。线程在执行runnable的run方法之后将会进入到终止状态。

java将操作系统中的运行和就绪两个状态合并称为运行状态。阻塞状态是线程阻塞在进入synchronized关键字修饰的方法或代码块（获取锁）时的状态，但是阻塞在
java.concurrent包中Lock接口的线程状态却是等待状态，因为java.concurrent包中Lock接口对于阻塞的实现均使用了LockSupport类中的相关方法。

启动线程：
	线程对象在初始化完成之后，调用start方法就可以启动这个线程，线程start方法的含义是：当前线程（即parent线程）同步告知java虚拟机，只要线程规划器
	空闲，应立即启动调用start方法的线程。