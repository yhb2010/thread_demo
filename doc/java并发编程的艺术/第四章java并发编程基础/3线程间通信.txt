java支持多个线程同时访问一个对象或对象的成员变量，由于每个线程可以拥有这个变量的拷贝（虽然对象以及成员变量分配的内存是在共享内存中的，但是每个执行的线程
还是可以拥有一份拷贝，这样的目的是加速程序的运行，这是现代处理器的一个显著特点），所以程序在执行过程中，一个线程看到的变量不一定是最新的。

关键字volatile可以用来修饰字段（成员变量），就是告知程序任何对该变量的访问均需要从共享内存中获取，而对他的改变必须同步刷新回共享内存，它能够保证所有线程
对变量访问的可见性。

例如，定义一个表示程序是否运行的成员变量on=true，那么另一个线程可能对他执行关闭操作，这里涉及多个线程对变量的访问，因此需要将其定义为volatile，这样其它
线程对他进行改变时，可以让所有线程感知到变化，因为所有对on变量的访问和修改都需要以共享内存为准。但是，过多的使用volatile是不必要的，因为他会降低效率。

任意一个对象都拥有自己的监视器，当这个对象由同步块或者这个对象的同步方法调用时，执行方法的线程必须先获取到该对象的监视器才能进入同步块或者同步方法，而没有
获取到监视器（执行该方法）的线程将会被阻塞在同步块和同步方法的入口处，进入blocked状态。