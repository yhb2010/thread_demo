相关方法：
	1、notify()：通知一个在对象上等待的线程，使其从wait()方法返回，而返回的前提是该线程获取到了对象的锁。
	2、notifyAll()：通知所有等待在该对象上的线程。
	3、wait()：调用该方法的线程进入waiting状态，只有等待另外线程的通知或者被中断才会返回，需要注意，调用wait()方法后，会释放对象的锁。
	4、wait(long)：超时等待一段时间，这里的参数时间是毫秒，也就是等待长达n毫秒，如果没有通知就超时返回。
	5、wait(long, int)：对于超时时间更细粒度的控制，可以达到纳秒。

调用wait、notify、notifyAll时需要注意的细节：
	1、使用wait、notify、notifyAll时需要先对调用对象加锁。
	2、调用wait方法后，线程状态由running变为waiting，并将当前线程放置到对象的等待队列。
	3、notify和notifyAll方法调用后，等待线程依旧不会从wait返回，需要调用notify和notifyAll的线程释放锁之后，等待线程才有机会从wait返回。
	4、notify方法将等待队列中的一个等待线程从等待队列中移到同步队列中，而notifyAll方法则是将等待队列中所有的线程全部移到同步队列，被移动的线程状态由
	waiting变为blocked。
	5、从wait方法返回的前提是获得了调用对象的锁。