要了解NIO，首先需要知道在NIO中一个关键组件Channel。Channel有点类似流，一个Channel可以和文件或者网络Socket对应。如果Channel
对应着一个Socket，那么往这个Channel中写数据，就等同于向Socket中写入数据。
和Channel一起使用的另外一个重要组件就是Buffer，可以简单的把Buffer理解成一个内存区域或者byte数组。数据需要包装成Buffer的形式
才能和Channel交互（写入或者读取）。
另外一个与Channel密切相关的是Selector。在Channel的众多实现中，有一个SelectableChannel实现，表示可被选择的通道。任何一个
SelectableChannel都可以将自己注册到一个Selector中。这样这个Channel就能被Selector所管理。而一个Selector可以管理多个
SelectableChannel。当SelectableChannel的数据准备好时，Selector就会接到通知，得到那些已经准备好的数据。而SocketChannel
就是selectableChannel的一种。
一个selector可以由一个线程进行管理，而一个SocketChannel则可以表示一个客户端连接，因此这就构成由一个或者极少数线程，来处理大量
客户端连接的结构。当与客户端连接的数据没有准备好时，Selector会处理等待状态（不过幸好，用于管理Selector的线程数是极少量的），而
一旦有任何一个SocketChannel准备好数据，Selector就能立即得到通知，获取数据进行处理。