1、get：取得当前值
2、set(int newValue)：设置当前值
3、getAndSet(int newValue)：设置新值，并返回旧值
4、compareAndSet(int expect, int u)：如果当前值为expect，则设置为u
5、getAndIncrement：当前值加1，返回旧值
6、getAndDecrement：当前值减1，返回旧值
7、getAndAdd(int delta)：当前值增加delta，返回旧值
8、incrementAndGet：当前值加1，返回新值
9、decrementAndGet：当前值减1，返回新值
10、addAndGet(int delta)：当前值增加delta，返回新值

AtomicIntegerArray：
	1、get(int i)：获得数组第i个下标的元素
	2、length：获得数组长度
	3、getAndSet(int i, int newValue)：将数组的第i个下标设置为newValue，并返回旧值
	4、compareAndSet(int i, int expect, int u)：如果数组第i个下标的元素等于expect，则设置为u，设置成功返回true
	5、getAndIncrement(int i)：将数组的第i个下标的元素加1
	6、getAndDecrement(int i)：将数组的第i个下标的元素减1
	7、getAndAdd(int i, int delta)：将数组的第i个下标的元素增加delta

AtomicIntegerFieldUpdater使用注意事项：
	1、Updater只能修改可见范围内的变量，因为Updater使用反射得到这个变量。如果变量不可见，就会出错，比如score声明为private是不行的。
	2、为了确保变量被正确读取，它必须是volatile类型的。
	3、由于cas操作会通过对象实例中的偏移量直接进行赋值，因此，他不支持static字段。