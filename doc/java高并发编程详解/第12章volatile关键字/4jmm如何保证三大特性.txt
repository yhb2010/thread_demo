java内存模型规定了所有的变量都是存在于主内存中，而每个线程都有自己的工作内存或者本地内存，这一点和cpu的cache很像。线程对变量的所有操作都必须
在自己的工作内存中进行，而不能直接操作主内存，并且每一个线程都不能访问其他线程的工作内存。
比如在某个线程中对变量i的赋值操作i=1，该线程必须在本地内存中对i进行修改之后才能将其写入主内存中。

jmm原子性：
	在java中，对基本数据类型的变量读取赋值操作都是原子性的，对引用变量的读取和赋值操作也是原子性的。
	下面我们看几个例子：
	1、x=10；赋值操作，原子性
	执行线程首先会将x=10写入工作内存，然后再将其写入主内存（有可能在往主内存进行数据刷新的时候有其他线程也在对其进行修改，比如另外一个线程将其写
	为11，但最终的结果肯定是10或11，不可能出现其他值，单就赋值语句而言其是原子性的）
	2、y=x；赋值操作，非原子性
	包含两个重要步骤：
		执行线程从主内存中读取x的值（如果x已经存在于执行线程的工作内存中，则直接获取）然后将其存入当前线程的工作内存中
		在执行线程的工作内存中修改y的值为x，然后将y的值写入主内存之中
	3、y++；自增操作，非原子性
	包含三个重要步骤：
		执行线程从主内存中读取y的值（如果y已经存在于执行线程的工作内存中，则直接获取）然后将其存入当前线程的工作内存中
		在执行线程工作内存中为y执行加1操作
		将y的值写入主内存
	4、z=z+1；加1操作，与自增操作等价
	我们可以得出以下结论：
	1、多个原子性操作在一起就不再是原子性操作了
	2、简单的读取与赋值操作是原子性的，将一个变量赋给另一个变量的操作不是原子性的
	3、jmm只保证了基本读取和赋值的原子性操作，其它均不保证，如果想要使得某些代码具备原子性，需要使用synchronized，或者juc中的lock，
	如果想使int的自增操作具有原子性，可以使用atomic。
	volatile关键字不具备保证原子性的语义
	
jmm可见性：
	在多线程下，如果某个线程首次读取共享变量，则首先到主内存中获取该变量，然后存入工作内存，以后只需要在工作内存中读取该变量即可。如果对该变量执行
	了修改操作，则先将新值写入工作内存，然后再刷新到主内存中，但是什么时候刷新到主内存是不太确定的。
	java提供了三种方式保证可见性：
	1、关键字volatile：当一个变量被volatile修饰时，对于共享资源的读操作会直接在主内存中进行（当然也会缓存到工作内存中，当其它线程对该共享
	资源进行了修改，则会导致当前线程在工作内存中的共享资源失效，所以必须从主内存中再次获取），对于共享资源的写操作当然是先要修改工作内存，但是修改结
	束后会立刻将其刷新到主内存。
	2、synchronized关键字：保证同一时刻只有一个线程获得锁，然后执行同步方法，并且还会确保在锁释放之前，会将对变量的修改刷新到主内存中
	3、显式lock：lock方法能够保证在同一时刻只有一个线程获得锁然后执行同步方法，并且会确保在释放锁之前会将对变量的修改刷新到主内存中
	volatile关键字具备可见性的语义
	
jmm有序性：
	java提供三种方式保证有序性：
	1、volatile关键字保证有序性
	2、synchronized关键字保证有序性
	3、显式lock保证有序性
	
此外java内存模型还具备一些天生的有序性，就是happens-before原则：
	1、程序次序规则：在一个线程内，代码按照编写的次序执行，编写在后面的操作发生于编写在前面的操作之后
	2、锁定规则：一个unlock操作要先于发生于对同一个锁的lock操作
	3、volatile变量规则：对一个变量的写操作要早于对这个变量之后的读操作。
	从字面上理解：如果一个变量使用volatile关键字修饰，一个线程对他进行读操作，一个线程对他进行写操作，那么写入操作肯定要先行发生于读操作。
	4、传递规则：如果操作a先于操作b，而操作b先于操作c，则可以得出操作a先于操作c
	5、线程启动规则：Thread对象的start方法先行发生于对该线程的任何动作，只有start之后线程才能真正启动，否则Thread也只是一个对象而已。
	6、线程中断规则：对线程执行interrupt方法肯定要优先于捕获到中断信号，这句话指如果线程收到了中断信号，在此之前势必要有interrupt()。
	7、线程的终结规则：线程中所有的操作都要先行发生于线程的终止检测，就是说线程的任务执行、逻辑单元执行肯定要发生于线程死亡之前
	8、对象的终结规则：一个对象初始化的完成先行发生于finalize方法之前。
	volatile关键字具有保证顺序性的语义。