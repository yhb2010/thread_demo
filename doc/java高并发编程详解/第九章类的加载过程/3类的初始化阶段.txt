<clinit>()方法是在编译阶段生成的，也就是说他已经包含在了class文件中了，<clinit>()中包含了所有类变量的赋值动作和静态语句块的执行代码，
编译器收集的顺序是由执行语句在源文件中的出现顺序锁决定的(<clinit>()是能够保证顺序性的)。另外需要注意：静态语句块只能对后面的静态变量进行赋值，
但是不能对其进行访问。

另外<clinit>()方法与类的构造函数有所不同，他不需要显示的调用父类的构造器，虚拟机会保证父类的<clinit>()方法最先执行，因此父类的静态变量总
是能够得到优先赋值。

虽然java编译器会帮助class生成<clinit>()方法，但是该方法并不意味着总会生成，比如某个类中既没有静态代码块，也没有静态变量，那么他就没有生成
<clinit>()方法的必要了。